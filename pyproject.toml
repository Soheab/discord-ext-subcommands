[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "discord-ext-subcommands"
version = "0.1.0"
description = "A Discord.py extension for subcommands accross multiple files."
readme = "README.md"
requires-python = ">=3.12"
license = "MPL-2.0"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = ["discord.py>=2.5.2"]

[tool.setuptools.packages.find]
where = ["discord/"]
include = ["discord", "discord.ext", "discord.ext.subcommands"]


[project.optional-dependencies]
dev = ["ruff>=0.1.0"]

[project.urls]
"Homepage" = "https://github.com/yourusername/discord-ext-subcommands"
"Bug Reports" = "https://github.com/yourusername/discord-ext-subcommands/issues"
"Source" = "https://github.com/yourusername/discord-ext-subcommands"


[tool.black]
target-version = ["py312"]
line-length = 125

# https://beta.ruff.rs/docs/settings/
[tool.ruff]
fix = true                                                      # default: false
line-length = 120                                               # default: 88
fixable = ["ALL"]                                               # default: ["ALL"]
include = ["discord", "discord.ext", "discord.ext.subcommands"]
exclude = ["**/__pycache__", "_build", "build", "dist", "docs"]
respect-gitignore = false                                       # default: true
indent-width = 4                                                # default: 4
target-version = "py312"                                        # default: "py38"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true       # default: false
ignore-fully-untyped = true     # default: false
mypy-init-return = false        # default: false
suppress-dummy-args = true      # default: false
suppress-none-returning = false # default: false

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true # default: false

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true # default: false

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.isort]
case-sensitive = true # default: false
combine-as-imports = true # default: false 
force-sort-within-sections = true # default: false
force-to-top = ["future", "typing"] # default: []
force-wrap-aliases = true # default: false
order-by-type = true # default: true
required-imports = ["from __future__ import annotations"] # default: []
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
] # default
split-on-trailing-comma = true # default: true

[tool.ruff.lint.pydocstyle]
convention = "numpy"                    # default: none
ignore-decorators = ["typing.overload"] # default: []

[tool.ruff.lint.pylint]
max-args = 20 # default: 5 # lets not limit ourselves :)

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true # default: false
